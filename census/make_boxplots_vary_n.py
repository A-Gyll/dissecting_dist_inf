import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from data_utils import PROPERTY_FOCUS, SUPPORTED_PROPERTIES
import argparse
import matplotlib as mpl
mpl.rcParams['figure.dpi'] = 200


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--darkplot', action="store_true",
                        help='Use dark background for plotting results')
    parser.add_argument('--legend', action="store_true",
                        help='Add legend to plots')
    parser.add_argument('--novtitle', action="store_true",
                        help='Remove Y-axis label')
    parser.add_argument('--filter', choices=SUPPORTED_PROPERTIES,
                        help='name for subfolder to save/load data from')
    args = parser.parse_args()

    first_cat = " 0.5"

    if args.darkplot:
        # Set dark background style
        plt.style.use('dark_background')

    # Set font size
    # plt.rcParams.update({'font.size': 18})
    plt.rcParams.update({'font.size': 14})

    data = []
    columns = [
        r'%s proportion of training data ($\alpha$)' % PROPERTY_FOCUS[args.filter],
        "Accuracy (%)",
        r'$n$'
    ]

    categories = ["0.0", "0.1", "0.2", "0.3",
                  "0.4", "0.6", "0.7", "0.8", "0.9", "1.0"]
    raw_data = {
        "3 (all)": {
            10: [
                    
                ],
            20: [

                ],
            40: [

                ],
            1600: [

                ]
        },
        "1": {
            10: [
                [69.43333333333334, 63.53333333333333, 69.26666666666667, 90.9, 71.1, 89.43333333333334, 70.86666666666666, 84.9, 71.63333333333334, 90.2],
                [63.2, 54.2, 52.93333333333333, 56.8, 52.03333333333333, 57.766666666666666, 46.266666666666666, 49.666666666666664, 61.733333333333334, 52.833333333333336],
                [53.03333333333333, 44.8, 41.06666666666667, 48.166666666666664, 45.06666666666667, 46.8, 54.333333333333336, 59.06666666666667, 47.333333333333336, 49.4],
                [45.6, 50.666666666666664, 59.333333333333336, 43.266666666666666, 58.266666666666666, 57.766666666666666, 42.56666666666667, 52.36666666666667, 50.6, 52.5],
                [57.56666666666667, 56.46666666666667, 47.86666666666667, 38.4, 47.266666666666666, 40.43333333333333, 43.166666666666664, 52.233333333333334, 63.8, 47.13333333333333],
                [46.5, 55.53333333333333, 42.233333333333334, 48.13333333333333, 54.1, 44.96666666666667, 56.766666666666666, 43.666666666666664, 39.9, 45.03333333333333],
                [48.53333333333333, 49.93333333333333, 43.9, 61.4, 53.5, 49.666666666666664, 44.7, 48.9, 54.3, 51.766666666666666],
                [55.6, 54.333333333333336, 40.43333333333333, 47.8, 65.26666666666667, 49.36666666666667, 57.3, 55.93333333333333, 59.0, 52.43333333333333],
                [63.56666666666667, 52.56666666666667, 53.03333333333333, 48.2, 54.53333333333333, 59.53333333333333, 51.53333333333333, 50.5, 53.333333333333336, 51.96666666666667],
                [73.46666666666667, 64.3, 68.1, 68.43333333333334, 68.23333333333333, 68.9, 72.2, 62.8, 97.03333333333333, 58.1]
                ],
            20: [
                    [90.96666666666667, 98.83333333333333, 96.3, 96.96666666666667, 97.63333333333334, 99.06666666666666, 94.63333333333334, 95.16666666666667, 97.7, 93.9],
                    [51.766666666666666, 57.36666666666667, 49.266666666666666, 53.9, 60.233333333333334, 55.56666666666667, 64.83333333333333, 52.53333333333333, 67.7, 50.06666666666667],
                    [53.6, 44.666666666666664, 59.766666666666666, 50.86666666666667, 63.4, 65.76666666666667, 58.733333333333334, 58.96666666666667, 63.86666666666667, 57.03333333333333],
                    [58.93333333333333, 51.7, 55.13333333333333, 53.333333333333336, 51.233333333333334, 43.666666666666664, 56.43333333333333, 49.53333333333333, 58.4, 49.7],
                    [40.6, 49.6, 49.43333333333333, 48.3, 47.53333333333333, 51.333333333333336, 43.666666666666664, 49.5, 41.56666666666667, 45.8],
                    [59.5, 45.833333333333336, 46.93333333333333, 56.1, 59.53333333333333, 46.733333333333334, 46.06666666666667, 58.1, 50.5, 52.166666666666664],
                    [57.4, 50.56666666666667, 49.666666666666664, 52.166666666666664, 52.63333333333333, 58.233333333333334, 58.93333333333333, 47.5, 49.13333333333333, 60.03333333333333],
                    [55.2, 55.833333333333336, 55.36666666666667, 57.6, 53.46666666666667, 56.6, 52.2, 52.0, 54.166666666666664, 49.733333333333334],
                    [52.03333333333333, 44.7, 47.6, 58.06666666666667, 54.5, 60.166666666666664, 64.86666666666666, 59.86666666666667, 49.06666666666667, 51.86666666666667],
                    [99.36666666666666, 88.46666666666667, 85.5, 76.7, 85.13333333333334, 81.23333333333333, 91.63333333333334, 92.13333333333334, 96.7, 79.66666666666667]
                ],
            40: [
                    [99.93333333333334, 98.53333333333333, 98.9, 100.0, 99.86666666666666, 98.9, 100.0, 100.0, 99.7, 99.86666666666666],
                    [62.6, 66.96666666666667, 62.733333333333334, 58.03333333333333, 65.4, 57.96666666666667, 64.86666666666666, 64.03333333333333, 60.1, 64.7],
                    [50.0, 58.56666666666667, 59.7, 63.6, 57.93333333333333, 64.36666666666666, 51.3, 56.53333333333333, 58.53333333333333, 54.6],
                    [50.1, 52.0, 55.733333333333334, 63.13333333333333, 50.63333333333333, 45.333333333333336, 43.266666666666666, 52.233333333333334, 45.733333333333334, 45.96666666666667],
                    [57.56666666666667, 54.7, 47.3, 45.53333333333333, 48.6, 57.266666666666666, 50.166666666666664, 54.666666666666664, 47.56666666666667, 47.733333333333334],
                    [55.7, 50.46666666666667, 58.7, 52.03333333333333, 53.96666666666667, 55.3, 43.3, 44.833333333333336, 50.06666666666667, 51.63333333333333],
                    [52.2, 61.7, 46.8, 49.0, 47.266666666666666, 63.333333333333336, 52.53333333333333, 45.96666666666667, 48.266666666666666, 51.46666666666667],
                    [49.96666666666667, 57.166666666666664, 59.1, 55.46666666666667, 47.8, 54.46666666666667, 64.5, 61.4, 58.96666666666667, 54.666666666666664],
                    [62.6, 61.3, 59.233333333333334, 56.666666666666664, 59.266666666666666, 51.6, 58.9, 62.6, 60.93333333333333, 64.3],
                    [88.93333333333334, 81.43333333333334, 86.6, 90.66666666666667, 82.6, 81.53333333333333, 84.26666666666667, 77.36666666666666, 94.43333333333334, 78.5]
                ],
            1600: [
                    [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0],
                    [75.13333333333334, 74.76666666666667, 72.9, 76.1, 74.53333333333333, 72.8, 75.03333333333333, 73.66666666666667, 74.56666666666666, 76.0],
                    [60.36666666666667, 60.86666666666667, 58.43333333333333, 59.766666666666666, 53.06666666666667, 59.733333333333334, 61.86666666666667, 63.833333333333336, 63.56666666666667, 63.9],
                    [50.56666666666667, 54.63333333333333, 55.666666666666664, 56.766666666666666, 52.766666666666666, 51.93333333333333, 56.53333333333333, 50.53333333333333, 58.333333333333336, 54.266666666666666],
                    [41.36666666666667, 51.766666666666666, 49.733333333333334, 51.166666666666664, 52.7, 49.166666666666664, 52.3, 46.233333333333334, 54.266666666666666, 48.0],
                    [59.2, 58.8, 60.833333333333336, 59.96666666666667, 57.4, 59.43333333333333, 60.13333333333333, 60.13333333333333, 60.5, 60.1],
                    [64.83333333333333, 64.96666666666667, 63.666666666666664, 65.73333333333333, 63.93333333333333, 60.833333333333336, 63.46666666666667, 65.66666666666667, 64.96666666666667, 65.66666666666667],
                    [68.7, 68.4, 68.26666666666667, 68.6, 68.2, 68.13333333333334, 68.7, 68.03333333333333, 67.56666666666666, 67.56666666666666],
                    [70.3, 70.33333333333333, 72.1, 72.26666666666667, 72.93333333333334, 72.2, 72.03333333333333, 73.8, 72.5, 70.73333333333333],
                    [84.06666666666666, 85.56666666666666, 77.66666666666667, 81.36666666666666, 83.86666666666666, 84.5, 83.33333333333333, 79.83333333333333, 80.56666666666666, 82.53333333333333]
                ]
        },
        "2": {
            10: [
                    [49.5, 64.83333333333333, 64.23333333333333, 50.233333333333334, 57.666666666666664, 48.2, 56.333333333333336, 46.1, 56.733333333333334, 59.266666666666666],
                    [56.56666666666667, 58.03333333333333, 50.666666666666664, 48.03333333333333, 49.1, 57.56666666666667, 50.6, 49.233333333333334, 47.233333333333334, 42.1],
                    [54.63333333333333, 53.833333333333336, 58.43333333333333, 55.03333333333333, 51.6, 47.53333333333333, 56.36666666666667, 41.93333333333333, 57.46666666666667, 51.9],
                    [47.8, 42.6, 58.5, 53.666666666666664, 60.86666666666667, 53.166666666666664, 47.63333333333333, 62.56666666666667, 56.766666666666666, 57.233333333333334],
                    [45.86666666666667, 54.166666666666664, 53.0, 57.5, 48.9, 52.333333333333336, 50.13333333333333, 59.63333333333333, 49.46666666666667, 42.166666666666664],
                    [56.56666666666667, 47.13333333333333, 47.46666666666667, 40.2, 48.0, 45.43333333333333, 39.7, 50.13333333333333, 48.1, 56.4],
                    [44.93333333333333, 40.2, 54.5, 38.0, 54.833333333333336, 52.13333333333333, 53.53333333333333, 50.266666666666666, 49.56666666666667, 44.3],
                    [54.13333333333333, 58.96666666666667, 42.6, 52.1, 56.333333333333336, 51.13333333333333, 40.93333333333333, 45.266666666666666, 53.766666666666666, 50.3],
                    [58.233333333333334, 41.4, 43.1, 46.666666666666664, 47.53333333333333, 58.3, 50.1, 59.666666666666664, 56.36666666666667, 55.4],
                    [56.5, 53.666666666666664, 49.733333333333334, 45.13333333333333, 34.7, 57.63333333333333, 45.53333333333333, 49.86666666666667, 52.63333333333333, 59.266666666666666]
            ],
            20: [
                    [64.06666666666666, 80.9, 90.9, 49.4, 58.2, 70.76666666666667, 58.06666666666667, 62.8, 76.63333333333334, 56.3],
                    [48.1, 59.7, 63.2, 48.03333333333333, 51.03333333333333, 48.86666666666667, 53.43333333333333, 51.333333333333336, 52.6, 47.56666666666667],
                    [48.63333333333333, 49.9, 56.6, 54.6, 55.93333333333333, 57.8, 48.06666666666667, 54.2, 45.56666666666667, 49.6],
                    [44.36666666666667, 44.3, 56.36666666666667, 46.7, 55.733333333333334, 40.43333333333333, 51.63333333333333, 56.766666666666666, 58.333333333333336, 52.2],
                    [56.03333333333333, 42.833333333333336, 42.53333333333333, 60.833333333333336, 52.5, 44.36666666666667, 51.56666666666667, 51.43333333333333, 47.3, 54.46666666666667],
                    [48.333333333333336, 44.833333333333336, 48.7, 54.333333333333336, 60.266666666666666, 45.9, 46.3, 53.233333333333334, 56.63333333333333, 59.266666666666666],
                    [44.93333333333333, 55.06666666666667, 40.666666666666664, 53.9, 45.63333333333333, 47.3, 54.06666666666667, 52.6, 49.96666666666667, 49.56666666666667],
                    [53.666666666666664, 45.733333333333334, 53.9, 45.266666666666666, 47.06666666666667, 50.666666666666664, 40.266666666666666, 49.93333333333333, 52.93333333333333, 48.8],
                    [53.53333333333333, 47.43333333333333, 51.833333333333336, 60.9, 48.8, 52.13333333333333, 56.13333333333333, 41.9, 50.8, 55.06666666666667],
                    [60.3, 50.3, 51.56666666666667, 49.93333333333333, 61.766666666666666, 53.666666666666664, 61.03333333333333, 62.43333333333333, 51.733333333333334, 57.333333333333336]
                ],
            40: [
                    [87.73333333333333, 95.96666666666667, 95.66666666666667, 97.33333333333333, 99.53333333333333, 98.43333333333334, 97.0, 99.56666666666666, 82.23333333333333, 89.93333333333334],
                    [50.0, 50.96666666666667, 53.03333333333333, 63.13333333333333, 51.766666666666666, 45.9, 57.53333333333333, 49.2, 50.166666666666664, 45.53333333333333],
                    [51.43333333333333, 52.1, 48.43333333333333, 42.9, 51.63333333333333, 53.0, 57.03333333333333, 52.03333333333333, 50.43333333333333, 50.2],
                    [47.8, 55.833333333333336, 53.8, 47.06666666666667, 46.6, 51.86666666666667, 59.2, 58.233333333333334, 53.0, 45.8],
                    [50.8, 54.833333333333336, 42.43333333333333, 52.63333333333333, 52.1, 46.7, 52.7, 54.06666666666667, 51.766666666666666, 48.233333333333334],
                    [49.43333333333333, 43.233333333333334, 54.166666666666664, 46.93333333333333, 48.36666666666667, 53.36666666666667, 45.03333333333333, 47.733333333333334, 52.3, 58.1],
                    [51.0, 51.2, 53.03333333333333, 54.36666666666667, 50.3, 54.53333333333333, 51.766666666666666, 48.86666666666667, 54.9, 56.93333333333333],
                    [53.666666666666664, 54.46666666666667, 48.36666666666667, 52.63333333333333, 50.766666666666666, 50.86666666666667, 52.7, 56.333333333333336, 45.4, 63.53333333333333],
                    [49.93333333333333, 48.3, 52.666666666666664, 48.93333333333333, 52.46666666666667, 53.36666666666667, 52.56666666666667, 49.63333333333333, 49.56666666666667, 55.8],
                    [82.13333333333334, 84.8, 72.26666666666667, 89.3, 61.96666666666667, 78.2, 44.46666666666667, 86.46666666666667, 96.56666666666666, 98.73333333333333]
                ],
            1600: [

                ]
        }
    }

    focus_n = 1600
    for n, v1 in raw_data.items():
        v2 = v1[focus_n]
        for i in range(len(v2)):
            for j in range(len(v2[i])):
                data.append([categories[i], v2[i][j], n])

    df = pd.DataFrame(data, columns=columns)
    sns_plot = sns.boxplot(x=columns[0], y=columns[1], hue=columns[2],
                           data=df, showfliers=False)

    if args.novtitle:
        plt.ylabel("", labelpad=0)

    # Accuracy range, with space to show good performance
    sns_plot.set(ylim=(45, 101))

    # Add dividing line in centre
    lower, upper = plt.gca().get_xlim()
    midpoint = (lower + upper) / 2
    plt.axvline(x=midpoint, color='white' if args.darkplot else 'black',
                linewidth=1.0, linestyle='--')

    # Map range to numbers to be plotted
    targets_scaled = range(int((upper - lower)))
    # plt.plot(targets_scaled, baselines, color='C1', marker='x', linestyle='--')

    if not args.legend:
        plt.legend([],[], frameon=False)

    # Make sure axis label not cut off
    plt.tight_layout()

    sns_plot.figure.savefig("./meta_boxplot_varying_n.png")
